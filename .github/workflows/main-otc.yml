name: Push images on main branch update about otc project (PRO env)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [ 17 ]
    name: Build OPEX and run tests with java ${{ matrix.java }}
    env:
      TAG: otc-pr
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-package: jdk
          java-version: ${{ matrix.java }}
      #          cache: maven
      - name: Build
        run:  |
          mvn -pl common -am  -B -T 1C clean install -Potc
          mvn -pl wallet,bc-gateway -amd  -B -T 1C clean install -Potc
      - name: Run Tests
        run: |
          mvn -pl common -am -B -T 1C -Dskip.unit.tests=false surefire:test
          mvn -pl wallet,bc-gateway -amd  -B -T 1C -Dskip.unit.tests=false surefire:test
      - name: Build Docker images
        run: docker compose -f docker-compose-otc.build.yml build
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push images to GitHub Container Registry
        run: docker compose -f docker-compose-otc.build.yml push
  deploy:
    name: deploy docker-compose on remote host
    runs-on: ubuntu-20.04
    needs: build
    env:
      TAG: otc-pr
    steps:
      - name: set ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{secrets.SSH_PRIVATE_KEY_PRO}}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.SSH_HOST_PRO}} >~/.ssh/known_hosts
      - name: pull docker images in dest server
        run: |
          ssh ${{secrets.SSH_USER_PRO}}@${{secrets.SSH_HOST_PRO}} "cd ${{secrets.SSH_DIR}}  \
          && git pull origin main \
          && docker compose -f docker-compose-otc.yml pull \
          && docker compose  -f docker-compose-otc.yml  -f docker-compose-otc.local.yml up -d  && exit "


