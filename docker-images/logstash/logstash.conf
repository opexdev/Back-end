input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    match => {"message" => "%{DATESTAMP:dateTime} \s*%{DATA:logLevel} %{INT:pid} --- \[\s*%{DATA:thread}\] %{DATA:class}: %{GREEDYDATA:msg}" }
  }

  mutate {
    rename => { "dateTime" => "[logback][dateTime]" }
    rename => { "logLevel" => "[logback][logLevel]" }
    rename => { "pid" => "[logback][pid]" }
    rename => { "thread" => "[logback][thread]" }
    rename => { "class" => "[logback][class]" }
    rename => { "msg" => "[logback][message]" }

    rename => { "[docker][container][labels][com_docker_compose_container-number]" => "[container][number]" }
    rename => { "[docker][container][labels][com_docker_compose_project]" => "[container][compose][project]" }
    rename => { "[docker][container][labels][com_docker_compose_service]" => "[container][compose][service]" }
    remove_field => [ "docker" ]

    add_tag => [ "logstash_filter_applied" ]
  }

  if "_grokparsefailure" in [tags] {
    mutate { add_field => { "formatted" => "No" } }
  } else {
    mutate { add_field => { "formatted" => "Yes" } }
  }
}

output {
  elasticsearch {
    hosts => "http://elasticsearch:9200"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
  }
}